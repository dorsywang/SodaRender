{"name":"Sodarender","tagline":"lite template render engine for JavaScript","body":"### Welcome to SodaRender.\r\nSodaRender is a lite angular-like template engine for JavaScript.\r\n\r\n###why using SodaRender?\r\n>####SodaRender is just 3KB in size.\r\n>####SodaRender has AngularJs Template like Apis. It will make your template file tidy, clearly to read.\r\n>####SodaRender reduces the error while cgi responses the data in unexpected way, such as losting some keys, error value types.\r\n>####SodaRender prevents XSS holes in your template file.\r\n>####SodaRender uses DOM parsor to render your template rather than string replacement, so it's more effective.\r\n\r\n\r\n\r\n##how to use SodaRender\r\n\r\n###Examples\r\n```html\r\n<html>\r\n    <head>\r\n        <title>\r\n            SodaRender Examaple\r\n        </title>\r\n    </head>\r\n    \r\n    <div>\r\n    <ul id=\"targetUl\">\r\n        <script type=\"text/soda\" id=\"dataList\">\r\n            <li soda-repeat=\"item in list\" soda-if=\"item.show\">\r\n            {{item.name}}\r\n            </li>\r\n        </script>\r\n    </ul>\r\n</div>\r\n</html>\r\n```\r\n```JavaScript\r\nvar templateStr = document.getElementById(\"dataList\");\r\nvar target = document.getElementById(\"targetUl\");\r\n\r\nvar data = {\r\n    list: [\r\n        {name: \"A\"},\r\n        {name: \"B\"}\r\n    ]\r\n};\r\n\r\nvar result = sodaRender(templateStr, data);\r\ntarget.appendChild(result);\r\n```\r\n\r\n##APIs Of SodaRender\r\n>### sodaRender\r\nUSING&nbsp;: &nbsp;&nbsp;SodaRender(String templateStr, Object data)<br />\r\nDESCR&nbsp;: &nbsp;&nbsp;Using templateStr with data to render template<br />\r\nRETURN: DOM Fragment<br />\r\nthe DOM Frament Object has a method innerHTML which will return the rendered HTML code.<br />\r\nMeanwhile, you can use it like a common DOM Node, such as appending it to your target node.\r\n>### sodaFilter\r\nUSING&nbsp;: &nbsp;&nbsp;SodaFilter(String filterName, Function func(input, args...))<br />\r\nDESCR&nbsp;: &nbsp;&nbsp;Defining Filters, so you can use filters in template<br />\r\n\r\n##Template Language (AngularJs Template Like)\r\n###Now, we just offer three directives as below. More will be added soon later. But the three directives are able to meet our daily needs.\r\n####{{}}\r\n>out put expressions\r\n\r\n>{{item.name + 1}}\r\n\r\n####soda-repeat\r\n>soda-repeat=\"item in array\"\r\nUSING&nbsp;: &nbsp;&nbsp;SodaRender(String templateStr, Object data)<br />\r\nDESCR&nbsp;: &nbsp;&nbsp;Using templateStr with data to render template<br />\r\n\r\n####soda-if\r\n>soda-if=\"item.show\"\r\n\r\n####soda-class\r\n>soda-class=\"currItem === 'list1' ? 'active' : ''\"\r\n\r\n####filters\r\n>{{input|filte1:args1:args2...|filter2:args...}}\r\nhow to define filters? Just using sodaFilter Method as methioned above. Here is an example.\r\n```JavaScript\r\nSodaFilter('shortTitle', function(input, length){\r\n        return (input || '').substr(0, length);\r\n});\r\n```\r\nTemplate below\r\n```html\r\n<div soda-repeat=\"item in list\">\r\n    <div class=\"title\">\r\n        {{item.title|shortTitle:10}}\r\n    </div>\r\n</div>\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}